{
  "name": "pricing-01",
  "type": "registry:component",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "button",
    "badge"
  ],
  "files": [
    {
      "type": "registry:component",
      "content": "\"use client\";\n\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Check, Sparkles, Zap, ArrowRight } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\n\ninterface Feature {\n    name: string;\n    description: string;\n    included: boolean;\n}\n\ninterface PricingTier {\n    name: string;\n    price: {\n        monthly: number;\n        yearly: number;\n    };\n    description: string;\n    features: Feature[];\n    highlight?: boolean;\n    badge?: string;\n    icon: React.ReactNode;\n}\n\nconst defaultTiers: PricingTier[] = [\n    {\n        name: \"Starter\",\n        price: {\n            monthly: 15,\n            yearly: 144,\n        },\n        description: \"Perfect for individuals and small projects\",\n        badge: \"Popular\",\n        icon: (\n            <div className=\"relative\">\n                <div className=\"absolute inset-0 bg-emerald-500/20 dark:bg-emerald-500/10 blur-xl rounded-full animate-pulse\" />\n                <Zap className=\"w-6 h-6 relative z-10 text-emerald-600 dark:text-emerald-400 animate-[bounce_2s_ease-in-out_infinite]\" />\n            </div>\n        ),\n        features: [\n            {\n                name: \"Basic Analytics\",\n                description: \"Track essential metrics and user behavior\",\n                included: true,\n            },\n            {\n                name: \"5 Team Members\",\n                description: \"Collaborate with a small team\",\n                included: true,\n            },\n            {\n                name: \"Basic Support\",\n                description: \"Email support with 24h response time\",\n                included: true,\n            },\n            {\n                name: \"API Access\",\n                description: \"Limited API access for basic integrations\",\n                included: false,\n            },\n        ],\n    },\n    {\n        name: \"Pro\",\n        price: {\n            monthly: 49,\n            yearly: 470,\n        },\n        description: \"Ideal for growing teams and businesses\",\n        highlight: true,\n        badge: \"Best Value\",\n        icon: (\n            <div className=\"relative\">\n                <div className=\"absolute inset-0 bg-violet-500/20 dark:bg-violet-500/10 blur-xl rounded-full animate-pulse\" />\n                <Sparkles className=\"w-6 h-6 relative z-10 text-violet-600 dark:text-violet-400 animate-[pulse_2s_ease-in-out_infinite]\" />\n            </div>\n        ),\n        features: [\n            {\n                name: \"Advanced Analytics\",\n                description: \"Deep insights and custom reports\",\n                included: true,\n            },\n            {\n                name: \"Unlimited Team Members\",\n                description: \"Scale your team without limits\",\n                included: true,\n            },\n            {\n                name: \"Priority Support\",\n                description: \"24/7 priority email and chat support\",\n                included: true,\n            },\n            {\n                name: \"Full API Access\",\n                description: \"Complete API access with higher rate limits\",\n                included: true,\n            },\n        ],\n    },\n];\n\nexport default function Pricing_01({\n    tiers = defaultTiers,\n}: {\n    tiers?: PricingTier[];\n}) {\n    const [isYearly, setIsYearly] = useState(false);\n\n    return (\n        <div className=\"w-full max-w-4xl sm:mx-auto\">\n            <div className=\"flex justify-center mb-8\">\n                <div className=\"inline-flex items-center p-1 bg-zinc-100 dark:bg-zinc-800/50 rounded-full\">\n                    {[\"Monthly\", \"Yearly\"].map((period) => (\n                        <button\n                            key={period}\n                            type=\"button\"\n                            onClick={() => setIsYearly(period === \"Yearly\")}\n                            className={cn(\n                                \"px-6 py-2 text-sm font-medium rounded-full transition-all duration-200\",\n                                (period === \"Yearly\") === isYearly\n                                    ? \"bg-white dark:bg-zinc-800 text-zinc-900 dark:text-zinc-100 shadow-sm\"\n                                    : \"text-zinc-600 dark:text-zinc-400 hover:text-zinc-900 dark:hover:text-zinc-100\"\n                            )}\n                        >\n                            {period}\n                        </button>\n                    ))}\n                </div>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n                {tiers.map((tier) => (\n                    <div\n                        key={tier.name}\n                        className={cn(\n                            \"relative group\",\n                            \"rounded-2xl border transition-all duration-300\",\n                            tier.highlight\n                                ? \"border-violet-500/20 dark:border-violet-400/20 shadow-xl\"\n                                : \"border-zinc-200 dark:border-zinc-800 shadow-sm\",\n                            \"hover:-translate-y-1 hover:shadow-lg\",\n                            tier.highlight\n                                ? \"hover:border-violet-500/30 dark:hover:border-violet-400/30\"\n                                : \"hover:border-zinc-300 dark:hover:border-zinc-700\"\n                        )}\n                    >\n                        {tier.badge && (\n                            <div className=\"absolute -top-3 left-4\">\n                                <Badge\n                                    className={cn(\n                                        \"px-3 py-1\",\n                                        tier.highlight\n                                            ? \"bg-gradient-to-r from-violet-500 to-indigo-500\"\n                                            : \"bg-gradient-to-r from-zinc-500 to-zinc-600\",\n                                        \"text-white border-none shadow-lg\"\n                                    )}\n                                >\n                                    {tier.badge}\n                                </Badge>\n                            </div>\n                        )}\n\n                        <div className=\"p-4 sm:p-6\">\n                            <div className=\"flex items-center justify-between mb-4\">\n                                <div\n                                    className={cn(\n                                        \"p-3 rounded-xl\",\n                                        tier.highlight\n                                            ? \"bg-violet-100 dark:bg-violet-900/30 text-violet-600 dark:text-violet-400\"\n                                            : \"bg-zinc-100 dark:bg-zinc-800 text-zinc-600 dark:text-zinc-400\"\n                                    )}\n                                >\n                                    {tier.icon}\n                                </div>\n                                <h3 className=\"text-xl font-semibold text-zinc-900 dark:text-zinc-100\">\n                                    {tier.name}\n                                </h3>\n                            </div>\n\n                            <div className=\"mb-6\">\n                                <div className=\"flex items-baseline gap-2\">\n                                    <span className=\"text-4xl font-bold text-zinc-900 dark:text-zinc-100\">\n                                        $\n                                        {isYearly\n                                            ? tier.price.yearly\n                                            : tier.price.monthly}\n                                    </span>\n                                    <span className=\"text-sm text-zinc-500 dark:text-zinc-400\">\n                                        /{isYearly ? \"year\" : \"month\"}\n                                    </span>\n                                </div>\n                                <p className=\"mt-2 text-sm text-zinc-600 dark:text-zinc-400\">\n                                    {tier.description}\n                                </p>\n                            </div>\n\n                            <div className=\"space-y-4\">\n                                {tier.features.map((feature) => (\n                                    <div\n                                        key={feature.name}\n                                        className=\"flex gap-4\"\n                                    >\n                                        <div\n                                            className={cn(\n                                                \"mt-1 p-0.5 rounded-full transition-colors duration-200\",\n                                                feature.included\n                                                    ? \"text-emerald-600 dark:text-emerald-400\"\n                                                    : \"text-zinc-400 dark:text-zinc-600\"\n                                            )}\n                                        >\n                                            <Check className=\"w-4 h-4\" />\n                                        </div>\n                                        <div>\n                                            <div className=\"text-sm font-medium text-zinc-900 dark:text-zinc-100\">\n                                                {feature.name}\n                                            </div>\n                                            <div className=\"text-sm text-zinc-500 dark:text-zinc-400\">\n                                                {feature.description}\n                                            </div>\n                                        </div>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n\n                        <div className=\"p-6 pt-0\">\n                            <Button\n                                className={cn(\n                                    \"w-full group relative overflow-hidden transition-all duration-300\",\n                                    tier.highlight\n                                        ? \"bg-gradient-to-r from-violet-500 to-indigo-500 hover:from-violet-600 hover:to-indigo-600 text-white shadow-lg shadow-violet-500/25\"\n                                        : \"bg-zinc-900 dark:bg-zinc-100 hover:bg-zinc-800 dark:hover:bg-zinc-200 text-white dark:text-zinc-900\"\n                                )}\n                            >\n                                <span className=\"relative z-10 flex items-center justify-center gap-2\">\n                                    Get started\n                                    <ArrowRight className=\"w-4 h-4 transition-transform duration-300 group-hover:translate-x-1\" />\n                                </span>\n                            </Button>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n",
      "path": "/components/kokonutui/pricing/pricing-01.tsx",
      "target": "/components/kokonutui/pricing-01.tsx"
    }
  ]
}